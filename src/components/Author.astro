---
import { getEntry, getEntries, type CollectionEntry } from 'astro:content';
import { Image } from 'astro:assets';
import Authors from './Authors.astro';
import DateTimeComponent from './DateTimeComponent.astro';
import type { Post } from 'src/schemas/post';
import AvatarImage from '@assets/images/avatar.png';
import { t } from '@utils/use-lang';
import type { ImageMetadata } from 'astro';
import { setTransitionSlug, TRANSITION_ELEMENT_IDS } from '@utils/transitions';
export interface Props {
    post: Post;
    hideAvatar?: boolean;
}

const { post, hideAvatar } = Astro.props;

const post_ref = (await getEntry('blog', post.slug)) as CollectionEntry<'blog'>;
const authors = await getEntries(post_ref.data.authors);

const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/images/authors/*.{jpeg,jpg,png,gif,svg}');

const authorImages = await Promise.all(
    authors.map(async (author) => {
        const image = author.data.profile_image ? `/src${author.data.profile_image}` : undefined;
        if (image && !images[image]) {
            throw new Error(`"${image}" does not exist in glob: "/src/assets/images/authors/*.{jpeg,jpg,png,gif,svg}"`);
        }
        if (image && images[image]) {
            return { [author.slug]: await images[image]() };
        }
        return {};
    })
);
const authorImagesObj = authorImages.reduce((acc, cur) => ({ ...acc, ...cur }), {});
const getTransitionNameFromElementId = setTransitionSlug({ pageSlug: post.slug });
---

<div
    class="hh z-4 relative flex flex-auto items-center overflow-hidden leading-snug"
    transition:name={getTransitionNameFromElementId({
        elementId: TRANSITION_ELEMENT_IDS.POST_CARD.AUTHOR,
    })}
>
    {
        !hideAvatar && (
            <ul class="hh-author mr-3 flex flex-none flex-wrap">
                {authors.map((author) => (
                    <li class="hh-author-item realtive">
                        <a
                            class="avatar is-45x45 relative block"
                            href={`/blog/author/${author.slug}/`}
                            title={t(`Go to the profile of`) + ' ' + author.data.name}
                            data-astro-prefetch="hover"
                        >
                            {author.data.profile_image ? (
                                <Image
                                    src={authorImagesObj[author.slug].default}
                                    class="rounded-full object-cover"
                                    alt={t(`Go to the profile of`) + ' ' + author.data.name}
                                    widths={[36]}
                                    sizes={`(max-width: 1000px) 50px`}
                                    width="36"
                                    height="36"
                                    loading="eager"
                                />
                            ) : (
                                <Image
                                    src={AvatarImage}
                                    class="rounded-full object-cover"
                                    alt={t(`Go to the profile of`) + ' ' + author.data.name}
                                    widths={[36]}
                                    sizes={`(max-width: 1000px) 50px`}
                                    width="36"
                                    height="36"
                                    loading="eager"
                                />
                            )}
                        </a>
                    </li>
                ))}
            </ul>
        )
    }

    <div class="hh-right flex-auto overflow-hidden">
        <div class="hh-author-name noWrapWithEllipsis text-sm">
            {authors.length > 2 ? `Multiple_authors` : <Authors authors={authors} />}
        </div>

        <DateTimeComponent post={post} />
    </div>
</div>
