---
import { Icon } from 'astro-icon/components';

type Props = Record<string, never>; // eslint-disable-line @typescript-eslint/no-unused-vars
---

<span
    role="button"
    class="js-dark-mode button is-white mr-2 items-center"
    aria-label="Dark and Light Mode"
    id="themeToggle"
>
    <Icon
        name="fa6-solid:moon"
        class="icon icon--moon m-0"
        style={{ marginRight: `calc(-0.5em - 1px)` }}
        width="32"
        height="32"
    />
    <Icon
        name="fa6-solid:sun"
        class="icon icon--sunny m-0 hidden"
        style={{ marginLeft: `calc(-0.5em - 1px)` }}
        width="32"
        height="32"
    />
</span>

<script is:inline data-astro-rerun>
    const initializeTheme = (doc = document) => {
        try {
            const media = window.matchMedia;
            const htmlClassList = doc.documentElement.classList;
            const prefersDefault = !!media && media('(prefers-color-scheme:{{defaultTheme}})').matches;
            doc.getElementById('themeToggle').addEventListener('click', handleToggleClick);
            const themeInLocalStorage = localStorage.getItem('theme');
            let theme;

            if (themeInLocalStorage === 'light' || themeInLocalStorage === 'dark') {
                theme = themeInLocalStorage;
            } else if (prefersDefault) {
                theme = '{{defaultTheme}}';
            } else {
                theme = '{{oppositeTheme}}';
            }

            htmlClassList.remove('light', 'dark');
            htmlClassList.add(theme);
        } catch (e) {
            console.error(e);
        }
    };

    const handleToggleClick = () => {
        const element = document.documentElement;
        element.classList.toggle('dark');

        const isDark = element.classList.contains('dark');
        localStorage.setItem('theme', isDark ? 'dark' : 'light');
    };

    initializeTheme();

    document.addEventListener('astro:before-swap', (event) => {
        initializeTheme(event?.newDocument);
    });
</script>
